#!/bin/sh

# Check for necessary tools
for cmd in grim swayimg slurp wl-copy; do
    command -v "$cmd" >/dev/null 2>&1 || { echo "$cmd is required but not installed." >&2; exit 1; }
done

# Prevent multiple instances of the script
if pidof -o %PPID -x "$0" > /dev/null; then
    exit 0
fi

test -d "$HOME/Pictures/Screenshots/$(date "+%Y-%m")" || mkdir "$HOME/Pictures/Screenshots/$(date "+%Y-%m")"
image_path="$HOME/Pictures/Screenshots/$(date "+%Y-%m")/$(date "+%d_%H%M%S").png"

# Function to capture the whole screen, show it with swayimg, then select a region to copy
capture_region() {
    temp_screenshot=$(mktemp --suffix=.png)
    grim "${temp_screenshot}"
    swayimg -f "${temp_screenshot}" --class="screenshot" &
    swayimg_pid=$!
    sleep 0.1

    # Select a region with slurp, then copy the selected region to the clipboard
    grim -g "$(slurp -d)" "$image_path"

    # Clean up
    kill "$swayimg_pid" 2>/dev/null
    rm -f "${temp_screenshot}"
}

# Function to capture a display output
capture_output() {
    grim -g "$(slurp -o -d)" "$image_path"
}

# Function to capture the full screen and copy directly to the clipboard
capture_full() {
    grim "$image_path"
}

# Handle arguments
case "$1" in
    region)    # Capture region
        capture_region
        ;;
    output)    # Capture monitor
        capture_output
        ;;
    full)      # Capture full screen
        capture_full
        ;;
    *)         # Default: Capture full screen
        capture_full
        ;;
esac

swappy -f "$image_path" -o "$image_path"
